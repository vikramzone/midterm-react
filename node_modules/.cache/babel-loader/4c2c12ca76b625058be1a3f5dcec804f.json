{"ast":null,"code":"import { persistReducer } from \"redux-persist\";\nimport storage from 'redux-persist/lib/storage'; //to tell redux to use localstorage as default storage \n\nimport { combineReducers } from \"redux\";\nimport { data } from \"jquery\";\nlet store = {\n  todos: []\n}; //reducer modifies the state. It must be a pure sync funtion. so we need to use action creator with thunk middleware for api calls\n\nconst reducer = (state = store, action) => {\n  switch (action.type) {\n    case \"SET_TODOS\":\n      return { ...state,\n        todos: action.todos\n      };\n\n    case \"ADD_TODO\":\n      return { ...state,\n        todos: [...state.todos, action.todo]\n      };\n\n    case \"DELETE_TODO\":\n      return { ...state,\n        todos: state.todos.filter(item => item.task !== action.item.task && item.name !== action.item.name)\n      };\n\n    case \"UPDATE_TODO\":\n      for (let i = 0; i < state.todos.length; i++) {\n        if (state.todos[i].task == action.item.task && state.todos[i].name == action.item.name) {\n          state.todos[i].status = \"Done\";\n        }\n      }\n\n      return { ...state,\n        todos: state.todos\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/pradh33p/Desktop/midterm-/midterm-react/src/Redux/Reducers.js"],"names":["persistReducer","storage","combineReducers","data","store","todos","reducer","state","action","type","todo","filter","item","task","name","i","length","status"],"mappings":"AAAA,SAASA,cAAT,QAA+B,eAA/B;AACA,OAAOC,OAAP,MAAoB,2BAApB,C,CAAgD;;AAChD,SAASC,eAAT,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,QAArB;AAEA,IAAIC,KAAK,GAAC;AACNC,EAAAA,KAAK,EAAC;AADA,CAAV,C,CAIA;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAACH,KAAP,EAAaI,MAAb,KAAuB;AAEvC,UAAOA,MAAM,CAACC,IAAd;AAEI,SAAK,WAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEPF,QAAAA,KAAK,EAACG,MAAM,CAACH;AAFN,OAAP;;AAIJ,SAAK,UAAL;AACI,aAAM,EACF,GAAGE,KADD;AAEFF,QAAAA,KAAK,EAAC,CAAC,GAAGE,KAAK,CAACF,KAAV,EAAgBG,MAAM,CAACE,IAAvB;AAFJ,OAAN;;AAIJ,SAAK,aAAL;AACI,aAAM,EACF,GAAGH,KADD;AAEFF,QAAAA,KAAK,EAACE,KAAK,CAACF,KAAN,CAAYM,MAAZ,CAAmBC,IAAI,IAAIA,IAAI,CAACC,IAAL,KAAcL,MAAM,CAACI,IAAP,CAAYC,IAA1B,IAAkCD,IAAI,CAACE,IAAL,KAAaN,MAAM,CAACI,IAAP,CAAYE,IAAtF;AAFJ,OAAN;;AAIJ,SAAK,aAAL;AAEI,WAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACR,KAAK,CAACF,KAAN,CAAYW,MAA1B,EAAiCD,CAAC,EAAlC,EAAqC;AAEjC,YAAGR,KAAK,CAACF,KAAN,CAAYU,CAAZ,EAAeF,IAAf,IAAqBL,MAAM,CAACI,IAAP,CAAYC,IAAjC,IAAyCN,KAAK,CAACF,KAAN,CAAYU,CAAZ,EAAeD,IAAf,IAAqBN,MAAM,CAACI,IAAP,CAAYE,IAA7E,EAAkF;AAC9EP,UAAAA,KAAK,CAACF,KAAN,CAAYU,CAAZ,EAAeE,MAAf,GAAsB,MAAtB;AACH;AAEJ;;AAED,aAAM,EACF,GAAGV,KADD;AAEFF,QAAAA,KAAK,EAACE,KAAK,CAACF;AAFV,OAAN;;AAKJ;AACI,aAAOE,KAAP;AAjCR;AAmCC,CArCD;;AAwCA,eAAeD,OAAf","sourcesContent":["import { persistReducer } from \"redux-persist\"\nimport storage from 'redux-persist/lib/storage' //to tell redux to use localstorage as default storage \nimport { combineReducers } from \"redux\"\nimport { data } from \"jquery\"\n\nlet store={\n    todos:[]\n}\n\n//reducer modifies the state. It must be a pure sync funtion. so we need to use action creator with thunk middleware for api calls\n\nconst reducer = (state=store,action) =>{\n\nswitch(action.type){\n        \n    case \"SET_TODOS\":\n        return {\n            ...state,\n        todos:action.todos\n        }\n    case \"ADD_TODO\":\n        return{\n            ...state,\n            todos:[...state.todos,action.todo]\n        }\n    case \"DELETE_TODO\":\n        return{\n            ...state,\n            todos:state.todos.filter(item => item.task !== action.item.task && item.name!== action.item.name)\n        }\n    case \"UPDATE_TODO\":\n      \n        for(let i=0;i<state.todos.length;i++){\n\n            if(state.todos[i].task==action.item.task && state.todos[i].name==action.item.name){\n                state.todos[i].status=\"Done\"\n            }\n\n        }\n        \n        return{\n            ...state,\n            todos:state.todos\n        }\n\n    default:\n        return state\n}\n}\n\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}